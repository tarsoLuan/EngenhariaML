2024-04-14 16:18:23,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:18:23,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:18:23,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:18:23,855:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:18:36,535:INFO:PyCaret ClassificationExperiment
2024-04-14 16:18:36,535:INFO:Logging name: Decision Tree Classifier
2024-04-14 16:18:36,535:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 16:18:36,536:INFO:version 3.3.0
2024-04-14 16:18:36,536:INFO:Initializing setup()
2024-04-14 16:18:36,536:INFO:self.USI: 0eee
2024-04-14 16:18:36,536:INFO:self._variable_keys: {'_available_plots', 'X_train', 'target_param', 'y_train', 'memory', 'X_test', 'exp_id', 'fix_imbalance', 'data', 'is_multiclass', 'y', 'fold_groups_param', 'exp_name_log', 'X', 'fold_generator', 'seed', 'gpu_n_jobs_param', 'USI', 'idx', 'html_param', 'y_test', 'n_jobs_param', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'pipeline', 'logging_param', 'gpu_param'}
2024-04-14 16:18:36,536:INFO:Checking environment
2024-04-14 16:18:36,536:INFO:python_version: 3.11.8
2024-04-14 16:18:36,536:INFO:python_build: ('main', 'Feb 26 2024 21:34:05')
2024-04-14 16:18:36,536:INFO:machine: AMD64
2024-04-14 16:18:36,536:INFO:platform: Windows-10-10.0.22635-SP0
2024-04-14 16:18:36,539:INFO:Memory: svmem(total=34301194240, available=21574438912, percent=37.1, used=12726755328, free=21574438912)
2024-04-14 16:18:36,540:INFO:Physical Core: 6
2024-04-14 16:18:36,540:INFO:Logical Core: 12
2024-04-14 16:18:36,540:INFO:Checking libraries
2024-04-14 16:18:36,540:INFO:System:
2024-04-14 16:18:36,540:INFO:    python: 3.11.8 | packaged by Anaconda, Inc. | (main, Feb 26 2024, 21:34:05) [MSC v.1916 64 bit (AMD64)]
2024-04-14 16:18:36,540:INFO:executable: c:\ProgramData\anaconda3\envs\EngenhariML\python.exe
2024-04-14 16:18:36,540:INFO:   machine: Windows-10-10.0.22635-SP0
2024-04-14 16:18:36,540:INFO:PyCaret required dependencies:
2024-04-14 16:18:36,586:INFO:                 pip: 23.3.1
2024-04-14 16:18:36,586:INFO:          setuptools: 68.2.2
2024-04-14 16:18:36,586:INFO:             pycaret: 3.3.0
2024-04-14 16:18:36,586:INFO:             IPython: 8.18.1
2024-04-14 16:18:36,587:INFO:          ipywidgets: 8.1.2
2024-04-14 16:18:36,587:INFO:                tqdm: 4.66.2
2024-04-14 16:18:36,587:INFO:               numpy: 1.26.4
2024-04-14 16:18:36,587:INFO:              pandas: 2.1.4
2024-04-14 16:18:36,587:INFO:              jinja2: 3.1.2
2024-04-14 16:18:36,587:INFO:               scipy: 1.11.4
2024-04-14 16:18:36,587:INFO:              joblib: 1.3.0
2024-04-14 16:18:36,587:INFO:             sklearn: 1.4.2
2024-04-14 16:18:36,587:INFO:                pyod: 1.1.3
2024-04-14 16:18:36,587:INFO:            imblearn: 0.12.2
2024-04-14 16:18:36,587:INFO:   category_encoders: 2.6.3
2024-04-14 16:18:36,587:INFO:            lightgbm: 4.3.0
2024-04-14 16:18:36,587:INFO:               numba: 0.59.1
2024-04-14 16:18:36,587:INFO:            requests: 2.31.0
2024-04-14 16:18:36,587:INFO:          matplotlib: 3.7.5
2024-04-14 16:18:36,587:INFO:          scikitplot: 0.3.7
2024-04-14 16:18:36,587:INFO:         yellowbrick: 1.5
2024-04-14 16:18:36,587:INFO:              plotly: 5.20.0
2024-04-14 16:18:36,587:INFO:    plotly-resampler: Not installed
2024-04-14 16:18:36,587:INFO:             kaleido: 0.2.1
2024-04-14 16:18:36,587:INFO:           schemdraw: 0.15
2024-04-14 16:18:36,587:INFO:         statsmodels: 0.14.1
2024-04-14 16:18:36,587:INFO:              sktime: 0.28.0
2024-04-14 16:18:36,587:INFO:               tbats: 1.1.3
2024-04-14 16:18:36,587:INFO:            pmdarima: 2.0.4
2024-04-14 16:18:36,587:INFO:              psutil: 5.9.6
2024-04-14 16:18:36,587:INFO:          markupsafe: 2.1.3
2024-04-14 16:18:36,587:INFO:             pickle5: Not installed
2024-04-14 16:18:36,587:INFO:         cloudpickle: 3.0.0
2024-04-14 16:18:36,587:INFO:         deprecation: 2.1.0
2024-04-14 16:18:36,587:INFO:              xxhash: 3.4.1
2024-04-14 16:18:36,587:INFO:           wurlitzer: Not installed
2024-04-14 16:18:36,587:INFO:PyCaret optional dependencies:
2024-04-14 16:18:36,601:INFO:                shap: Not installed
2024-04-14 16:18:36,601:INFO:           interpret: Not installed
2024-04-14 16:18:36,601:INFO:                umap: Not installed
2024-04-14 16:18:36,601:INFO:     ydata_profiling: Not installed
2024-04-14 16:18:36,601:INFO:  explainerdashboard: Not installed
2024-04-14 16:18:36,601:INFO:             autoviz: Not installed
2024-04-14 16:18:36,601:INFO:           fairlearn: Not installed
2024-04-14 16:18:36,601:INFO:          deepchecks: Not installed
2024-04-14 16:18:36,601:INFO:             xgboost: Not installed
2024-04-14 16:18:36,601:INFO:            catboost: Not installed
2024-04-14 16:18:36,601:INFO:              kmodes: Not installed
2024-04-14 16:18:36,601:INFO:             mlxtend: Not installed
2024-04-14 16:18:36,601:INFO:       statsforecast: Not installed
2024-04-14 16:18:36,601:INFO:        tune_sklearn: Not installed
2024-04-14 16:18:36,601:INFO:                 ray: Not installed
2024-04-14 16:18:36,601:INFO:            hyperopt: Not installed
2024-04-14 16:18:36,601:INFO:              optuna: Not installed
2024-04-14 16:18:36,601:INFO:               skopt: Not installed
2024-04-14 16:18:36,601:INFO:              mlflow: 2.11.3
2024-04-14 16:18:36,601:INFO:              gradio: Not installed
2024-04-14 16:18:36,601:INFO:             fastapi: Not installed
2024-04-14 16:18:36,601:INFO:             uvicorn: Not installed
2024-04-14 16:18:36,601:INFO:              m2cgen: Not installed
2024-04-14 16:18:36,601:INFO:           evidently: Not installed
2024-04-14 16:18:36,601:INFO:               fugue: Not installed
2024-04-14 16:18:36,601:INFO:           streamlit: Not installed
2024-04-14 16:18:36,601:INFO:             prophet: Not installed
2024-04-14 16:18:36,601:INFO:None
2024-04-14 16:18:36,601:INFO:Set up data.
2024-04-14 16:18:36,605:INFO:Set up folding strategy.
2024-04-14 16:18:36,605:INFO:Set up train/test split.
2024-04-14 16:18:36,609:INFO:Set up index.
2024-04-14 16:18:36,609:INFO:Assigning column types.
2024-04-14 16:18:36,611:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 16:18:36,646:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:18:36,648:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:18:36,674:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,707:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:18:36,708:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:18:36,730:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,730:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,730:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 16:18:36,767:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:18:36,790:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,790:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,827:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:18:36,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,848:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 16:18:36,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:36,962:INFO:Preparing preprocessing pipeline...
2024-04-14 16:18:36,963:INFO:Set up simple imputation.
2024-04-14 16:18:36,977:INFO:Finished creating preprocessing pipeline.
2024-04-14 16:18:36,980:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 16:18:36,980:INFO:Creating final display dataframe.
2024-04-14 16:18:37,027:INFO:Setup _display_container:                     Description                     Value
0                    Session id                      7595
1                        Target            shot_made_flag
2                   Target type                    Binary
3           Original data shape                 (5140, 7)
4        Transformed data shape                 (5140, 7)
5   Transformed train set shape                 (3597, 7)
6    Transformed test set shape                 (1543, 7)
7              Numeric features                         6
8                    Preprocess                      True
9               Imputation type                    simple
10           Numeric imputation                      mean
11       Categorical imputation                      mode
12               Fold Generator           StratifiedKFold
13                  Fold Number                        10
14                     CPU Jobs                        -1
15                      Use GPU                     False
16               Log Experiment              MlflowLogger
17              Experiment Name  Decision Tree Classifier
18                          USI                      0eee
2024-04-14 16:18:37,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:37,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:37,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:37,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:18:37,147:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 16:18:37,147:INFO:Logging experiment in loggers
2024-04-14 16:18:37,306:INFO:SubProcess save_model() called ==================================
2024-04-14 16:18:37,311:INFO:Initializing save_model()
2024-04-14 16:18:37,311:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\luant\AppData\Local\Temp\tmputtmy0rk\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:18:37,311:INFO:Adding model into prep_pipe
2024-04-14 16:18:37,311:WARNING:Only Model saved as it was a pipeline.
2024-04-14 16:18:37,313:INFO:C:\Users\luant\AppData\Local\Temp\tmputtmy0rk\Transformation Pipeline.pkl saved in current working directory
2024-04-14 16:18:37,315:INFO:Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 16:18:37,315:INFO:save_model() successfully completed......................................
2024-04-14 16:18:37,430:INFO:SubProcess save_model() end ==================================
2024-04-14 16:18:37,448:INFO:setup() successfully completed in 0.61s...............
2024-04-14 16:18:37,448:INFO:Initializing create_model()
2024-04-14 16:18:37,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:18:37,449:INFO:Checking exceptions
2024-04-14 16:18:37,461:INFO:Importing libraries
2024-04-14 16:18:37,461:INFO:Copying training dataset
2024-04-14 16:18:37,467:INFO:Defining folds
2024-04-14 16:18:37,467:INFO:Declaring metric variables
2024-04-14 16:18:37,472:INFO:Importing untrained model
2024-04-14 16:18:37,477:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:18:37,482:INFO:Starting cross validation
2024-04-14 16:18:37,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:18:40,608:INFO:Calculating mean and std
2024-04-14 16:18:40,610:INFO:Creating metrics dataframe
2024-04-14 16:18:40,616:INFO:Finalizing model
2024-04-14 16:18:40,633:INFO:Creating Dashboard logs
2024-04-14 16:18:40,636:INFO:Model: Decision Tree Classifier
2024-04-14 16:18:40,652:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 7595, 'splitter': 'best'}
2024-04-14 16:18:40,719:INFO:Initializing predict_model()
2024-04-14 16:18:40,719:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015AC79AB560>)
2024-04-14 16:18:40,719:INFO:Checking exceptions
2024-04-14 16:18:40,719:INFO:Preloading libraries
2024-04-14 16:18:40,865:INFO:SubProcess plot_model() called ==================================
2024-04-14 16:18:40,866:INFO:Initializing plot_model()
2024-04-14 16:18:40,866:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), plot=auc, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmpi2j_8got, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:18:40,866:INFO:Checking exceptions
2024-04-14 16:18:40,867:INFO:Preloading libraries
2024-04-14 16:18:40,867:INFO:Copying training dataset
2024-04-14 16:18:40,867:INFO:Plot type: auc
2024-04-14 16:18:40,909:INFO:Fitting Model
2024-04-14 16:18:40,909:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:18:40,910:INFO:Scoring test/hold-out set
2024-04-14 16:18:40,927:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmpi2j_8got\AUC.png'
2024-04-14 16:18:41,091:INFO:Visual Rendered Successfully
2024-04-14 16:18:41,192:INFO:plot_model() successfully completed......................................
2024-04-14 16:18:41,198:INFO:Initializing plot_model()
2024-04-14 16:18:41,198:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), plot=confusion_matrix, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmpi2j_8got, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:18:41,198:INFO:Checking exceptions
2024-04-14 16:18:41,199:INFO:Preloading libraries
2024-04-14 16:18:41,200:INFO:Copying training dataset
2024-04-14 16:18:41,200:INFO:Plot type: confusion_matrix
2024-04-14 16:18:41,242:INFO:Fitting Model
2024-04-14 16:18:41,242:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:18:41,243:INFO:Scoring test/hold-out set
2024-04-14 16:18:41,258:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmpi2j_8got\Confusion Matrix.png'
2024-04-14 16:18:41,339:INFO:Visual Rendered Successfully
2024-04-14 16:18:41,442:INFO:plot_model() successfully completed......................................
2024-04-14 16:18:41,449:INFO:Initializing plot_model()
2024-04-14 16:18:41,449:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), plot=feature, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmpi2j_8got, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:18:41,449:INFO:Checking exceptions
2024-04-14 16:18:41,450:INFO:Preloading libraries
2024-04-14 16:18:41,450:INFO:Copying training dataset
2024-04-14 16:18:41,451:INFO:Plot type: feature
2024-04-14 16:18:41,451:WARNING:No coef_ found. Trying feature_importances_
2024-04-14 16:18:41,475:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmpi2j_8got\Feature Importance.png'
2024-04-14 16:18:41,567:INFO:Visual Rendered Successfully
2024-04-14 16:18:41,675:INFO:plot_model() successfully completed......................................
2024-04-14 16:18:41,681:INFO:SubProcess plot_model() end ==================================
2024-04-14 16:18:41,685:WARNING:c:\ProgramData\anaconda3\envs\EngenhariML\Lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-14 16:18:42,598:INFO:Uploading results into container
2024-04-14 16:18:42,599:INFO:Uploading model into container now
2024-04-14 16:18:42,606:INFO:_master_model_container: 1
2024-04-14 16:18:42,607:INFO:_display_container: 2
2024-04-14 16:18:42,607:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best')
2024-04-14 16:18:42,607:INFO:create_model() successfully completed......................................
2024-04-14 16:18:42,721:INFO:Initializing plot_model()
2024-04-14 16:18:42,721:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:18:42,721:INFO:Checking exceptions
2024-04-14 16:18:42,724:INFO:Preloading libraries
2024-04-14 16:18:42,725:INFO:Copying training dataset
2024-04-14 16:18:42,725:INFO:Plot type: auc
2024-04-14 16:18:42,766:INFO:Fitting Model
2024-04-14 16:18:42,767:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:18:42,767:INFO:Scoring test/hold-out set
2024-04-14 16:18:42,781:INFO:Saving 'AUC.png'
2024-04-14 16:18:42,932:INFO:Visual Rendered Successfully
2024-04-14 16:18:43,034:INFO:plot_model() successfully completed......................................
2024-04-14 16:18:43,041:INFO:Initializing plot_model()
2024-04-14 16:18:43,041:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), plot=pr, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:18:43,041:INFO:Checking exceptions
2024-04-14 16:18:43,044:INFO:Preloading libraries
2024-04-14 16:18:43,044:INFO:Copying training dataset
2024-04-14 16:18:43,044:INFO:Plot type: pr
2024-04-14 16:18:43,087:INFO:Fitting Model
2024-04-14 16:18:43,087:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:18:43,088:INFO:Scoring test/hold-out set
2024-04-14 16:18:43,100:INFO:Saving 'Precision Recall.png'
2024-04-14 16:18:43,226:INFO:Visual Rendered Successfully
2024-04-14 16:18:43,330:INFO:plot_model() successfully completed......................................
2024-04-14 16:18:43,337:INFO:Initializing plot_model()
2024-04-14 16:18:43,337:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:18:43,337:INFO:Checking exceptions
2024-04-14 16:18:43,340:INFO:Preloading libraries
2024-04-14 16:18:43,340:INFO:Copying training dataset
2024-04-14 16:18:43,340:INFO:Plot type: confusion_matrix
2024-04-14 16:18:43,383:INFO:Fitting Model
2024-04-14 16:18:43,383:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:18:43,383:INFO:Scoring test/hold-out set
2024-04-14 16:18:43,399:INFO:Saving 'Confusion Matrix.png'
2024-04-14 16:18:43,477:INFO:Visual Rendered Successfully
2024-04-14 16:18:43,583:INFO:plot_model() successfully completed......................................
2024-04-14 16:18:43,590:INFO:Initializing plot_model()
2024-04-14 16:18:43,590:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), plot=threshold, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:18:43,590:INFO:Checking exceptions
2024-04-14 16:18:43,594:INFO:Preloading libraries
2024-04-14 16:18:43,594:INFO:Copying training dataset
2024-04-14 16:18:43,594:INFO:Plot type: threshold
2024-04-14 16:18:43,639:INFO:Fitting Model
2024-04-14 16:18:44,186:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:18:44,199:INFO:Scoring test/hold-out set
2024-04-14 16:18:44,201:INFO:Saving 'Threshold.png'
2024-04-14 16:18:44,432:INFO:Visual Rendered Successfully
2024-04-14 16:18:44,537:INFO:plot_model() successfully completed......................................
2024-04-14 16:18:44,543:INFO:Initializing plot_model()
2024-04-14 16:18:44,543:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC749A250>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), plot=learning, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:18:44,543:INFO:Checking exceptions
2024-04-14 16:18:44,546:INFO:Preloading libraries
2024-04-14 16:18:44,547:INFO:Copying training dataset
2024-04-14 16:18:44,547:INFO:Plot type: learning
2024-04-14 16:18:44,594:INFO:Fitting Model
2024-04-14 16:18:45,695:INFO:Saving 'Learning Curve.png'
2024-04-14 16:18:45,839:INFO:Visual Rendered Successfully
2024-04-14 16:18:45,950:INFO:plot_model() successfully completed......................................
2024-04-14 16:18:45,959:INFO:Initializing save_model()
2024-04-14 16:18:45,959:INFO:save_model(model=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=7595,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=7595, splitter='best'), model_name=./modelo_kobe_dt, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:18:45,959:INFO:Adding model into prep_pipe
2024-04-14 16:18:45,961:INFO:./modelo_kobe_dt.pkl saved in current working directory
2024-04-14 16:18:45,966:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=7595,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.5,
                                                      random_state=7595,
                                                      splitter='best'))],
         verbose=False)
2024-04-14 16:18:45,966:INFO:save_model() successfully completed......................................
2024-04-14 16:18:46,075:INFO:Initializing load_model()
2024-04-14 16:18:46,075:INFO:load_model(model_name=./modelo_kobe_dt, platform=None, authentication=None, verbose=True)
2024-04-14 16:26:22,178:INFO:PyCaret ClassificationExperiment
2024-04-14 16:26:22,178:INFO:Logging name: Decision Tree Classifier
2024-04-14 16:26:22,178:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 16:26:22,178:INFO:version 3.3.0
2024-04-14 16:26:22,178:INFO:Initializing setup()
2024-04-14 16:26:22,178:INFO:self.USI: dba8
2024-04-14 16:26:22,178:INFO:self._variable_keys: {'_available_plots', 'X_train', 'target_param', 'y_train', 'memory', 'X_test', 'exp_id', 'fix_imbalance', 'data', 'is_multiclass', 'y', 'fold_groups_param', 'exp_name_log', 'X', 'fold_generator', 'seed', 'gpu_n_jobs_param', 'USI', 'idx', 'html_param', 'y_test', 'n_jobs_param', '_ml_usecase', 'log_plots_param', 'fold_shuffle_param', 'pipeline', 'logging_param', 'gpu_param'}
2024-04-14 16:26:22,178:INFO:Checking environment
2024-04-14 16:26:22,178:INFO:python_version: 3.11.8
2024-04-14 16:26:22,178:INFO:python_build: ('main', 'Feb 26 2024 21:34:05')
2024-04-14 16:26:22,178:INFO:machine: AMD64
2024-04-14 16:26:22,178:INFO:platform: Windows-10-10.0.22635-SP0
2024-04-14 16:26:22,180:INFO:Memory: svmem(total=34301194240, available=20796620800, percent=39.4, used=13504573440, free=20796620800)
2024-04-14 16:26:22,181:INFO:Physical Core: 6
2024-04-14 16:26:22,181:INFO:Logical Core: 12
2024-04-14 16:26:22,181:INFO:Checking libraries
2024-04-14 16:26:22,181:INFO:System:
2024-04-14 16:26:22,181:INFO:    python: 3.11.8 | packaged by Anaconda, Inc. | (main, Feb 26 2024, 21:34:05) [MSC v.1916 64 bit (AMD64)]
2024-04-14 16:26:22,181:INFO:executable: c:\ProgramData\anaconda3\envs\EngenhariML\python.exe
2024-04-14 16:26:22,181:INFO:   machine: Windows-10-10.0.22635-SP0
2024-04-14 16:26:22,181:INFO:PyCaret required dependencies:
2024-04-14 16:26:22,181:INFO:                 pip: 23.3.1
2024-04-14 16:26:22,181:INFO:          setuptools: 68.2.2
2024-04-14 16:26:22,181:INFO:             pycaret: 3.3.0
2024-04-14 16:26:22,181:INFO:             IPython: 8.18.1
2024-04-14 16:26:22,181:INFO:          ipywidgets: 8.1.2
2024-04-14 16:26:22,181:INFO:                tqdm: 4.66.2
2024-04-14 16:26:22,181:INFO:               numpy: 1.26.4
2024-04-14 16:26:22,181:INFO:              pandas: 2.1.4
2024-04-14 16:26:22,181:INFO:              jinja2: 3.1.2
2024-04-14 16:26:22,181:INFO:               scipy: 1.11.4
2024-04-14 16:26:22,182:INFO:              joblib: 1.3.0
2024-04-14 16:26:22,182:INFO:             sklearn: 1.4.2
2024-04-14 16:26:22,182:INFO:                pyod: 1.1.3
2024-04-14 16:26:22,182:INFO:            imblearn: 0.12.2
2024-04-14 16:26:22,182:INFO:   category_encoders: 2.6.3
2024-04-14 16:26:22,182:INFO:            lightgbm: 4.3.0
2024-04-14 16:26:22,182:INFO:               numba: 0.59.1
2024-04-14 16:26:22,182:INFO:            requests: 2.31.0
2024-04-14 16:26:22,182:INFO:          matplotlib: 3.7.5
2024-04-14 16:26:22,182:INFO:          scikitplot: 0.3.7
2024-04-14 16:26:22,182:INFO:         yellowbrick: 1.5
2024-04-14 16:26:22,182:INFO:              plotly: 5.20.0
2024-04-14 16:26:22,182:INFO:    plotly-resampler: Not installed
2024-04-14 16:26:22,182:INFO:             kaleido: 0.2.1
2024-04-14 16:26:22,182:INFO:           schemdraw: 0.15
2024-04-14 16:26:22,182:INFO:         statsmodels: 0.14.1
2024-04-14 16:26:22,182:INFO:              sktime: 0.28.0
2024-04-14 16:26:22,182:INFO:               tbats: 1.1.3
2024-04-14 16:26:22,182:INFO:            pmdarima: 2.0.4
2024-04-14 16:26:22,182:INFO:              psutil: 5.9.6
2024-04-14 16:26:22,182:INFO:          markupsafe: 2.1.3
2024-04-14 16:26:22,182:INFO:             pickle5: Not installed
2024-04-14 16:26:22,182:INFO:         cloudpickle: 3.0.0
2024-04-14 16:26:22,182:INFO:         deprecation: 2.1.0
2024-04-14 16:26:22,182:INFO:              xxhash: 3.4.1
2024-04-14 16:26:22,182:INFO:           wurlitzer: Not installed
2024-04-14 16:26:22,182:INFO:PyCaret optional dependencies:
2024-04-14 16:26:22,182:INFO:                shap: Not installed
2024-04-14 16:26:22,182:INFO:           interpret: Not installed
2024-04-14 16:26:22,182:INFO:                umap: Not installed
2024-04-14 16:26:22,182:INFO:     ydata_profiling: Not installed
2024-04-14 16:26:22,182:INFO:  explainerdashboard: Not installed
2024-04-14 16:26:22,183:INFO:             autoviz: Not installed
2024-04-14 16:26:22,183:INFO:           fairlearn: Not installed
2024-04-14 16:26:22,183:INFO:          deepchecks: Not installed
2024-04-14 16:26:22,183:INFO:             xgboost: Not installed
2024-04-14 16:26:22,183:INFO:            catboost: Not installed
2024-04-14 16:26:22,183:INFO:              kmodes: Not installed
2024-04-14 16:26:22,183:INFO:             mlxtend: Not installed
2024-04-14 16:26:22,183:INFO:       statsforecast: Not installed
2024-04-14 16:26:22,183:INFO:        tune_sklearn: Not installed
2024-04-14 16:26:22,183:INFO:                 ray: Not installed
2024-04-14 16:26:22,183:INFO:            hyperopt: Not installed
2024-04-14 16:26:22,183:INFO:              optuna: Not installed
2024-04-14 16:26:22,183:INFO:               skopt: Not installed
2024-04-14 16:26:22,183:INFO:              mlflow: 2.11.3
2024-04-14 16:26:22,183:INFO:              gradio: Not installed
2024-04-14 16:26:22,183:INFO:             fastapi: Not installed
2024-04-14 16:26:22,183:INFO:             uvicorn: Not installed
2024-04-14 16:26:22,183:INFO:              m2cgen: Not installed
2024-04-14 16:26:22,183:INFO:           evidently: Not installed
2024-04-14 16:26:22,183:INFO:               fugue: Not installed
2024-04-14 16:26:22,183:INFO:           streamlit: Not installed
2024-04-14 16:26:22,183:INFO:             prophet: Not installed
2024-04-14 16:26:22,183:INFO:None
2024-04-14 16:26:22,183:INFO:Set up data.
2024-04-14 16:26:22,186:INFO:Set up folding strategy.
2024-04-14 16:26:22,186:INFO:Set up train/test split.
2024-04-14 16:26:22,192:INFO:Set up index.
2024-04-14 16:26:22,192:INFO:Assigning column types.
2024-04-14 16:26:22,195:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 16:26:22,228:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:26:22,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:26:22,250:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,250:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:26:22,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:26:22,313:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,314:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 16:26:22,348:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:26:22,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,404:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:26:22,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,426:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 16:26:22,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,540:INFO:Preparing preprocessing pipeline...
2024-04-14 16:26:22,540:INFO:Set up simple imputation.
2024-04-14 16:26:22,553:INFO:Finished creating preprocessing pipeline.
2024-04-14 16:26:22,555:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 16:26:22,555:INFO:Creating final display dataframe.
2024-04-14 16:26:22,596:INFO:Setup _display_container:                     Description                     Value
0                    Session id                      3158
1                        Target            shot_made_flag
2                   Target type                    Binary
3           Original data shape                 (5140, 7)
4        Transformed data shape                 (5140, 7)
5   Transformed train set shape                 (3597, 7)
6    Transformed test set shape                 (1543, 7)
7              Numeric features                         6
8                    Preprocess                      True
9               Imputation type                    simple
10           Numeric imputation                      mean
11       Categorical imputation                      mode
12               Fold Generator           StratifiedKFold
13                  Fold Number                        10
14                     CPU Jobs                        -1
15                      Use GPU                     False
16               Log Experiment              MlflowLogger
17              Experiment Name  Decision Tree Classifier
18                          USI                      dba8
2024-04-14 16:26:22,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:26:22,715:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 16:26:22,715:INFO:Logging experiment in loggers
2024-04-14 16:26:22,757:INFO:SubProcess save_model() called ==================================
2024-04-14 16:26:22,762:INFO:Initializing save_model()
2024-04-14 16:26:22,762:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\luant\AppData\Local\Temp\tmpiqxzmrwj\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:26:22,762:INFO:Adding model into prep_pipe
2024-04-14 16:26:22,762:WARNING:Only Model saved as it was a pipeline.
2024-04-14 16:26:22,764:INFO:C:\Users\luant\AppData\Local\Temp\tmpiqxzmrwj\Transformation Pipeline.pkl saved in current working directory
2024-04-14 16:26:22,766:INFO:Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 16:26:22,766:INFO:save_model() successfully completed......................................
2024-04-14 16:26:22,877:INFO:SubProcess save_model() end ==================================
2024-04-14 16:26:22,890:INFO:setup() successfully completed in 0.54s...............
2024-04-14 16:26:22,893:INFO:Initializing create_model()
2024-04-14 16:26:22,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:26:22,893:INFO:Checking exceptions
2024-04-14 16:26:22,903:INFO:Importing libraries
2024-04-14 16:26:22,903:INFO:Copying training dataset
2024-04-14 16:26:22,907:INFO:Defining folds
2024-04-14 16:26:22,907:INFO:Declaring metric variables
2024-04-14 16:26:22,910:INFO:Importing untrained model
2024-04-14 16:26:22,914:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:26:22,918:INFO:Starting cross validation
2024-04-14 16:26:22,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:26:23,210:INFO:Calculating mean and std
2024-04-14 16:26:23,211:INFO:Creating metrics dataframe
2024-04-14 16:26:23,216:INFO:Finalizing model
2024-04-14 16:26:23,238:INFO:Creating Dashboard logs
2024-04-14 16:26:23,243:INFO:Model: Decision Tree Classifier
2024-04-14 16:26:23,268:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 3158, 'splitter': 'best'}
2024-04-14 16:26:23,361:INFO:Initializing predict_model()
2024-04-14 16:26:23,361:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000015ACAC57EC0>)
2024-04-14 16:26:23,361:INFO:Checking exceptions
2024-04-14 16:26:23,361:INFO:Preloading libraries
2024-04-14 16:26:23,526:INFO:SubProcess plot_model() called ==================================
2024-04-14 16:26:23,527:INFO:Initializing plot_model()
2024-04-14 16:26:23,527:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), plot=auc, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmp5umda4pn, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:26:23,527:INFO:Checking exceptions
2024-04-14 16:26:23,528:INFO:Preloading libraries
2024-04-14 16:26:23,529:INFO:Copying training dataset
2024-04-14 16:26:23,529:INFO:Plot type: auc
2024-04-14 16:26:23,570:INFO:Fitting Model
2024-04-14 16:26:23,570:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:26:23,571:INFO:Scoring test/hold-out set
2024-04-14 16:26:23,585:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmp5umda4pn\AUC.png'
2024-04-14 16:26:23,740:INFO:Visual Rendered Successfully
2024-04-14 16:26:23,854:INFO:plot_model() successfully completed......................................
2024-04-14 16:26:23,860:INFO:Initializing plot_model()
2024-04-14 16:26:23,861:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), plot=confusion_matrix, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmp5umda4pn, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:26:23,861:INFO:Checking exceptions
2024-04-14 16:26:23,863:INFO:Preloading libraries
2024-04-14 16:26:23,863:INFO:Copying training dataset
2024-04-14 16:26:23,863:INFO:Plot type: confusion_matrix
2024-04-14 16:26:23,910:INFO:Fitting Model
2024-04-14 16:26:23,911:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:26:23,911:INFO:Scoring test/hold-out set
2024-04-14 16:26:23,926:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmp5umda4pn\Confusion Matrix.png'
2024-04-14 16:26:24,012:INFO:Visual Rendered Successfully
2024-04-14 16:26:24,127:INFO:plot_model() successfully completed......................................
2024-04-14 16:26:24,134:INFO:Initializing plot_model()
2024-04-14 16:26:24,134:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), plot=feature, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmp5umda4pn, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:26:24,134:INFO:Checking exceptions
2024-04-14 16:26:24,135:INFO:Preloading libraries
2024-04-14 16:26:24,135:INFO:Copying training dataset
2024-04-14 16:26:24,135:INFO:Plot type: feature
2024-04-14 16:26:24,136:WARNING:No coef_ found. Trying feature_importances_
2024-04-14 16:26:24,160:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmp5umda4pn\Feature Importance.png'
2024-04-14 16:26:24,268:INFO:Visual Rendered Successfully
2024-04-14 16:26:24,387:INFO:plot_model() successfully completed......................................
2024-04-14 16:26:24,392:INFO:SubProcess plot_model() end ==================================
2024-04-14 16:26:24,556:INFO:Uploading results into container
2024-04-14 16:26:24,557:INFO:Uploading model into container now
2024-04-14 16:26:24,563:INFO:_master_model_container: 1
2024-04-14 16:26:24,564:INFO:_display_container: 2
2024-04-14 16:26:24,564:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best')
2024-04-14 16:26:24,565:INFO:create_model() successfully completed......................................
2024-04-14 16:26:24,684:INFO:Initializing plot_model()
2024-04-14 16:26:24,684:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:26:24,684:INFO:Checking exceptions
2024-04-14 16:26:24,687:INFO:Preloading libraries
2024-04-14 16:26:24,687:INFO:Copying training dataset
2024-04-14 16:26:24,687:INFO:Plot type: auc
2024-04-14 16:26:24,744:INFO:Fitting Model
2024-04-14 16:26:24,745:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:26:24,745:INFO:Scoring test/hold-out set
2024-04-14 16:26:24,760:INFO:Saving 'AUC.png'
2024-04-14 16:26:24,918:INFO:Visual Rendered Successfully
2024-04-14 16:26:25,033:INFO:plot_model() successfully completed......................................
2024-04-14 16:26:25,039:INFO:Initializing plot_model()
2024-04-14 16:26:25,039:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), plot=pr, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:26:25,039:INFO:Checking exceptions
2024-04-14 16:26:25,042:INFO:Preloading libraries
2024-04-14 16:26:25,042:INFO:Copying training dataset
2024-04-14 16:26:25,042:INFO:Plot type: pr
2024-04-14 16:26:25,094:INFO:Fitting Model
2024-04-14 16:26:25,095:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:26:25,095:INFO:Scoring test/hold-out set
2024-04-14 16:26:25,110:INFO:Saving 'Precision Recall.png'
2024-04-14 16:26:25,245:INFO:Visual Rendered Successfully
2024-04-14 16:26:25,356:INFO:plot_model() successfully completed......................................
2024-04-14 16:26:25,364:INFO:Initializing plot_model()
2024-04-14 16:26:25,364:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:26:25,364:INFO:Checking exceptions
2024-04-14 16:26:25,367:INFO:Preloading libraries
2024-04-14 16:26:25,367:INFO:Copying training dataset
2024-04-14 16:26:25,367:INFO:Plot type: confusion_matrix
2024-04-14 16:26:25,413:INFO:Fitting Model
2024-04-14 16:26:25,414:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:26:25,414:INFO:Scoring test/hold-out set
2024-04-14 16:26:25,430:INFO:Saving 'Confusion Matrix.png'
2024-04-14 16:26:25,514:INFO:Visual Rendered Successfully
2024-04-14 16:26:25,634:INFO:plot_model() successfully completed......................................
2024-04-14 16:26:25,640:INFO:Initializing plot_model()
2024-04-14 16:26:25,641:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), plot=threshold, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:26:25,641:INFO:Checking exceptions
2024-04-14 16:26:25,644:INFO:Preloading libraries
2024-04-14 16:26:25,645:INFO:Copying training dataset
2024-04-14 16:26:25,645:INFO:Plot type: threshold
2024-04-14 16:26:25,692:INFO:Fitting Model
2024-04-14 16:26:26,306:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:26:26,320:INFO:Scoring test/hold-out set
2024-04-14 16:26:26,321:INFO:Saving 'Threshold.png'
2024-04-14 16:26:26,506:INFO:Visual Rendered Successfully
2024-04-14 16:26:26,622:INFO:plot_model() successfully completed......................................
2024-04-14 16:26:26,630:INFO:Initializing plot_model()
2024-04-14 16:26:26,630:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000015AC73E1A90>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), plot=learning, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:26:26,630:INFO:Checking exceptions
2024-04-14 16:26:26,634:INFO:Preloading libraries
2024-04-14 16:26:26,634:INFO:Copying training dataset
2024-04-14 16:26:26,635:INFO:Plot type: learning
2024-04-14 16:26:26,682:INFO:Fitting Model
2024-04-14 16:26:28,409:INFO:Saving 'Learning Curve.png'
2024-04-14 16:26:28,584:INFO:Visual Rendered Successfully
2024-04-14 16:26:28,704:INFO:plot_model() successfully completed......................................
2024-04-14 16:26:28,712:INFO:Initializing save_model()
2024-04-14 16:26:28,713:INFO:save_model(model=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=3158,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=3158, splitter='best'), model_name=./modelo_kobe_dt, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:26:28,713:INFO:Adding model into prep_pipe
2024-04-14 16:26:28,715:INFO:./modelo_kobe_dt.pkl saved in current working directory
2024-04-14 16:26:28,720:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=3158,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.5,
                                                      random_state=3158,
                                                      splitter='best'))],
         verbose=False)
2024-04-14 16:26:28,720:INFO:save_model() successfully completed......................................
2024-04-14 16:26:28,834:INFO:Initializing load_model()
2024-04-14 16:26:28,834:INFO:load_model(model_name=./modelo_kobe_dt, platform=None, authentication=None, verbose=True)
2024-04-14 16:28:51,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:28:51,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:28:51,479:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:28:51,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-14 16:29:17,974:INFO:PyCaret ClassificationExperiment
2024-04-14 16:29:17,974:INFO:Logging name: Decision Tree Classifier
2024-04-14 16:29:17,974:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 16:29:17,975:INFO:version 3.3.0
2024-04-14 16:29:17,975:INFO:Initializing setup()
2024-04-14 16:29:17,975:INFO:self.USI: 97cf
2024-04-14 16:29:17,975:INFO:self._variable_keys: {'X_test', 'exp_id', 'fold_generator', 'y_test', 'data', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'USI', 'html_param', 'target_param', 'fix_imbalance', '_ml_usecase', 'seed', 'memory', 'X_train', 'n_jobs_param', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'gpu_param', 'X', 'exp_name_log', 'idx', '_available_plots', 'y'}
2024-04-14 16:29:17,975:INFO:Checking environment
2024-04-14 16:29:17,975:INFO:python_version: 3.11.8
2024-04-14 16:29:17,975:INFO:python_build: ('main', 'Feb 26 2024 21:34:05')
2024-04-14 16:29:17,975:INFO:machine: AMD64
2024-04-14 16:29:17,975:INFO:platform: Windows-10-10.0.22635-SP0
2024-04-14 16:29:17,978:INFO:Memory: svmem(total=34301194240, available=21572849664, percent=37.1, used=12728344576, free=21572849664)
2024-04-14 16:29:17,978:INFO:Physical Core: 6
2024-04-14 16:29:17,978:INFO:Logical Core: 12
2024-04-14 16:29:17,978:INFO:Checking libraries
2024-04-14 16:29:17,978:INFO:System:
2024-04-14 16:29:17,978:INFO:    python: 3.11.8 | packaged by Anaconda, Inc. | (main, Feb 26 2024, 21:34:05) [MSC v.1916 64 bit (AMD64)]
2024-04-14 16:29:17,978:INFO:executable: c:\ProgramData\anaconda3\envs\EngenhariML\python.exe
2024-04-14 16:29:17,978:INFO:   machine: Windows-10-10.0.22635-SP0
2024-04-14 16:29:17,978:INFO:PyCaret required dependencies:
2024-04-14 16:29:18,026:INFO:                 pip: 23.3.1
2024-04-14 16:29:18,026:INFO:          setuptools: 68.2.2
2024-04-14 16:29:18,026:INFO:             pycaret: 3.3.0
2024-04-14 16:29:18,026:INFO:             IPython: 8.18.1
2024-04-14 16:29:18,026:INFO:          ipywidgets: 8.1.2
2024-04-14 16:29:18,026:INFO:                tqdm: 4.66.2
2024-04-14 16:29:18,026:INFO:               numpy: 1.26.4
2024-04-14 16:29:18,026:INFO:              pandas: 2.1.4
2024-04-14 16:29:18,026:INFO:              jinja2: 3.1.2
2024-04-14 16:29:18,026:INFO:               scipy: 1.11.4
2024-04-14 16:29:18,026:INFO:              joblib: 1.3.0
2024-04-14 16:29:18,026:INFO:             sklearn: 1.4.2
2024-04-14 16:29:18,026:INFO:                pyod: 1.1.3
2024-04-14 16:29:18,026:INFO:            imblearn: 0.12.2
2024-04-14 16:29:18,026:INFO:   category_encoders: 2.6.3
2024-04-14 16:29:18,026:INFO:            lightgbm: 4.3.0
2024-04-14 16:29:18,026:INFO:               numba: 0.59.1
2024-04-14 16:29:18,026:INFO:            requests: 2.31.0
2024-04-14 16:29:18,026:INFO:          matplotlib: 3.7.5
2024-04-14 16:29:18,026:INFO:          scikitplot: 0.3.7
2024-04-14 16:29:18,026:INFO:         yellowbrick: 1.5
2024-04-14 16:29:18,026:INFO:              plotly: 5.20.0
2024-04-14 16:29:18,026:INFO:    plotly-resampler: Not installed
2024-04-14 16:29:18,026:INFO:             kaleido: 0.2.1
2024-04-14 16:29:18,026:INFO:           schemdraw: 0.15
2024-04-14 16:29:18,026:INFO:         statsmodels: 0.14.1
2024-04-14 16:29:18,026:INFO:              sktime: 0.28.0
2024-04-14 16:29:18,027:INFO:               tbats: 1.1.3
2024-04-14 16:29:18,027:INFO:            pmdarima: 2.0.4
2024-04-14 16:29:18,027:INFO:              psutil: 5.9.6
2024-04-14 16:29:18,027:INFO:          markupsafe: 2.1.3
2024-04-14 16:29:18,027:INFO:             pickle5: Not installed
2024-04-14 16:29:18,027:INFO:         cloudpickle: 3.0.0
2024-04-14 16:29:18,027:INFO:         deprecation: 2.1.0
2024-04-14 16:29:18,027:INFO:              xxhash: 3.4.1
2024-04-14 16:29:18,027:INFO:           wurlitzer: Not installed
2024-04-14 16:29:18,027:INFO:PyCaret optional dependencies:
2024-04-14 16:29:18,040:INFO:                shap: Not installed
2024-04-14 16:29:18,040:INFO:           interpret: Not installed
2024-04-14 16:29:18,040:INFO:                umap: Not installed
2024-04-14 16:29:18,040:INFO:     ydata_profiling: Not installed
2024-04-14 16:29:18,040:INFO:  explainerdashboard: Not installed
2024-04-14 16:29:18,040:INFO:             autoviz: Not installed
2024-04-14 16:29:18,040:INFO:           fairlearn: Not installed
2024-04-14 16:29:18,040:INFO:          deepchecks: Not installed
2024-04-14 16:29:18,040:INFO:             xgboost: Not installed
2024-04-14 16:29:18,040:INFO:            catboost: Not installed
2024-04-14 16:29:18,040:INFO:              kmodes: Not installed
2024-04-14 16:29:18,040:INFO:             mlxtend: Not installed
2024-04-14 16:29:18,040:INFO:       statsforecast: Not installed
2024-04-14 16:29:18,040:INFO:        tune_sklearn: Not installed
2024-04-14 16:29:18,040:INFO:                 ray: Not installed
2024-04-14 16:29:18,040:INFO:            hyperopt: Not installed
2024-04-14 16:29:18,040:INFO:              optuna: Not installed
2024-04-14 16:29:18,040:INFO:               skopt: Not installed
2024-04-14 16:29:18,040:INFO:              mlflow: 2.11.3
2024-04-14 16:29:18,040:INFO:              gradio: Not installed
2024-04-14 16:29:18,040:INFO:             fastapi: Not installed
2024-04-14 16:29:18,040:INFO:             uvicorn: Not installed
2024-04-14 16:29:18,040:INFO:              m2cgen: Not installed
2024-04-14 16:29:18,040:INFO:           evidently: Not installed
2024-04-14 16:29:18,040:INFO:               fugue: Not installed
2024-04-14 16:29:18,040:INFO:           streamlit: Not installed
2024-04-14 16:29:18,041:INFO:             prophet: Not installed
2024-04-14 16:29:18,041:INFO:None
2024-04-14 16:29:18,041:INFO:Set up data.
2024-04-14 16:29:18,044:INFO:Set up folding strategy.
2024-04-14 16:29:18,044:INFO:Set up train/test split.
2024-04-14 16:29:18,048:INFO:Set up index.
2024-04-14 16:29:18,048:INFO:Assigning column types.
2024-04-14 16:29:18,051:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 16:29:18,084:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:29:18,087:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:29:18,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,146:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:29:18,146:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:29:18,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,168:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,168:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 16:29:18,202:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:29:18,224:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,224:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,259:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:29:18,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,280:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,281:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 16:29:18,335:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,392:INFO:Preparing preprocessing pipeline...
2024-04-14 16:29:18,393:INFO:Set up simple imputation.
2024-04-14 16:29:18,406:INFO:Finished creating preprocessing pipeline.
2024-04-14 16:29:18,409:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 16:29:18,409:INFO:Creating final display dataframe.
2024-04-14 16:29:18,451:INFO:Setup _display_container:                     Description                     Value
0                    Session id                      6327
1                        Target            shot_made_flag
2                   Target type                    Binary
3           Original data shape                 (5140, 7)
4        Transformed data shape                 (5140, 7)
5   Transformed train set shape                 (3597, 7)
6    Transformed test set shape                 (1543, 7)
7              Numeric features                         6
8                    Preprocess                      True
9               Imputation type                    simple
10           Numeric imputation                      mean
11       Categorical imputation                      mode
12               Fold Generator           StratifiedKFold
13                  Fold Number                        10
14                     CPU Jobs                        -1
15                      Use GPU                     False
16               Log Experiment              MlflowLogger
17              Experiment Name  Decision Tree Classifier
18                          USI                      97cf
2024-04-14 16:29:18,512:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,569:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:29:18,571:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 16:29:18,571:INFO:Logging experiment in loggers
2024-04-14 16:29:18,728:INFO:SubProcess save_model() called ==================================
2024-04-14 16:29:18,732:INFO:Initializing save_model()
2024-04-14 16:29:18,732:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\luant\AppData\Local\Temp\tmpuv0kzemx\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:29:18,732:INFO:Adding model into prep_pipe
2024-04-14 16:29:18,732:WARNING:Only Model saved as it was a pipeline.
2024-04-14 16:29:18,733:INFO:C:\Users\luant\AppData\Local\Temp\tmpuv0kzemx\Transformation Pipeline.pkl saved in current working directory
2024-04-14 16:29:18,736:INFO:Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 16:29:18,737:INFO:save_model() successfully completed......................................
2024-04-14 16:29:18,841:INFO:SubProcess save_model() end ==================================
2024-04-14 16:29:18,858:INFO:setup() successfully completed in 0.6s...............
2024-04-14 16:29:18,858:INFO:Initializing create_model()
2024-04-14 16:29:18,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:29:18,858:INFO:Checking exceptions
2024-04-14 16:29:18,870:INFO:Importing libraries
2024-04-14 16:29:18,870:INFO:Copying training dataset
2024-04-14 16:29:18,874:INFO:Defining folds
2024-04-14 16:29:18,874:INFO:Declaring metric variables
2024-04-14 16:29:18,876:INFO:Importing untrained model
2024-04-14 16:29:18,879:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:29:18,884:INFO:Starting cross validation
2024-04-14 16:29:18,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:29:21,895:INFO:Calculating mean and std
2024-04-14 16:29:21,897:INFO:Creating metrics dataframe
2024-04-14 16:29:21,903:INFO:Finalizing model
2024-04-14 16:29:21,929:INFO:Creating Dashboard logs
2024-04-14 16:29:21,933:INFO:Model: Decision Tree Classifier
2024-04-14 16:29:21,956:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 6327, 'splitter': 'best'}
2024-04-14 16:29:22,062:INFO:Initializing predict_model()
2024-04-14 16:29:22,062:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F865E7B240>)
2024-04-14 16:29:22,062:INFO:Checking exceptions
2024-04-14 16:29:22,062:INFO:Preloading libraries
2024-04-14 16:29:22,224:INFO:SubProcess plot_model() called ==================================
2024-04-14 16:29:22,225:INFO:Initializing plot_model()
2024-04-14 16:29:22,225:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), plot=auc, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmpkv726a9h, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:29:22,225:INFO:Checking exceptions
2024-04-14 16:29:22,227:INFO:Preloading libraries
2024-04-14 16:29:22,227:INFO:Copying training dataset
2024-04-14 16:29:22,227:INFO:Plot type: auc
2024-04-14 16:29:22,268:INFO:Fitting Model
2024-04-14 16:29:22,268:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:29:22,269:INFO:Scoring test/hold-out set
2024-04-14 16:29:22,286:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmpkv726a9h\AUC.png'
2024-04-14 16:29:22,448:INFO:Visual Rendered Successfully
2024-04-14 16:29:22,552:INFO:plot_model() successfully completed......................................
2024-04-14 16:29:22,558:INFO:Initializing plot_model()
2024-04-14 16:29:22,558:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), plot=confusion_matrix, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmpkv726a9h, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:29:22,558:INFO:Checking exceptions
2024-04-14 16:29:22,560:INFO:Preloading libraries
2024-04-14 16:29:22,560:INFO:Copying training dataset
2024-04-14 16:29:22,560:INFO:Plot type: confusion_matrix
2024-04-14 16:29:22,602:INFO:Fitting Model
2024-04-14 16:29:22,602:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:29:22,602:INFO:Scoring test/hold-out set
2024-04-14 16:29:22,617:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmpkv726a9h\Confusion Matrix.png'
2024-04-14 16:29:22,697:INFO:Visual Rendered Successfully
2024-04-14 16:29:22,800:INFO:plot_model() successfully completed......................................
2024-04-14 16:29:22,807:INFO:Initializing plot_model()
2024-04-14 16:29:22,807:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), plot=feature, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmpkv726a9h, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:29:22,807:INFO:Checking exceptions
2024-04-14 16:29:22,808:INFO:Preloading libraries
2024-04-14 16:29:22,808:INFO:Copying training dataset
2024-04-14 16:29:22,808:INFO:Plot type: feature
2024-04-14 16:29:22,809:WARNING:No coef_ found. Trying feature_importances_
2024-04-14 16:29:22,833:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmpkv726a9h\Feature Importance.png'
2024-04-14 16:29:22,924:INFO:Visual Rendered Successfully
2024-04-14 16:29:23,034:INFO:plot_model() successfully completed......................................
2024-04-14 16:29:23,040:INFO:SubProcess plot_model() end ==================================
2024-04-14 16:29:23,043:WARNING:c:\ProgramData\anaconda3\envs\EngenhariML\Lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2024-04-14 16:29:23,987:INFO:Uploading results into container
2024-04-14 16:29:23,988:INFO:Uploading model into container now
2024-04-14 16:29:23,995:INFO:_master_model_container: 1
2024-04-14 16:29:23,995:INFO:_display_container: 2
2024-04-14 16:29:23,996:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best')
2024-04-14 16:29:23,996:INFO:create_model() successfully completed......................................
2024-04-14 16:29:24,099:INFO:Initializing plot_model()
2024-04-14 16:29:24,099:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:29:24,099:INFO:Checking exceptions
2024-04-14 16:29:24,102:INFO:Preloading libraries
2024-04-14 16:29:24,103:INFO:Copying training dataset
2024-04-14 16:29:24,103:INFO:Plot type: auc
2024-04-14 16:29:24,150:INFO:Fitting Model
2024-04-14 16:29:24,150:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:29:24,151:INFO:Scoring test/hold-out set
2024-04-14 16:29:24,166:INFO:Saving 'AUC.png'
2024-04-14 16:29:24,332:INFO:Visual Rendered Successfully
2024-04-14 16:29:24,452:INFO:plot_model() successfully completed......................................
2024-04-14 16:29:24,459:INFO:Initializing plot_model()
2024-04-14 16:29:24,459:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), plot=pr, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:29:24,459:INFO:Checking exceptions
2024-04-14 16:29:24,462:INFO:Preloading libraries
2024-04-14 16:29:24,463:INFO:Copying training dataset
2024-04-14 16:29:24,463:INFO:Plot type: pr
2024-04-14 16:29:24,530:INFO:Fitting Model
2024-04-14 16:29:24,531:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:29:24,531:INFO:Scoring test/hold-out set
2024-04-14 16:29:24,547:INFO:Saving 'Precision Recall.png'
2024-04-14 16:29:24,679:INFO:Visual Rendered Successfully
2024-04-14 16:29:24,779:INFO:plot_model() successfully completed......................................
2024-04-14 16:29:24,786:INFO:Initializing plot_model()
2024-04-14 16:29:24,786:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:29:24,786:INFO:Checking exceptions
2024-04-14 16:29:24,789:INFO:Preloading libraries
2024-04-14 16:29:24,789:INFO:Copying training dataset
2024-04-14 16:29:24,789:INFO:Plot type: confusion_matrix
2024-04-14 16:29:24,831:INFO:Fitting Model
2024-04-14 16:29:24,832:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:29:24,832:INFO:Scoring test/hold-out set
2024-04-14 16:29:24,846:INFO:Saving 'Confusion Matrix.png'
2024-04-14 16:29:24,922:INFO:Visual Rendered Successfully
2024-04-14 16:29:25,030:INFO:plot_model() successfully completed......................................
2024-04-14 16:29:25,036:INFO:Initializing plot_model()
2024-04-14 16:29:25,036:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), plot=threshold, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:29:25,036:INFO:Checking exceptions
2024-04-14 16:29:25,039:INFO:Preloading libraries
2024-04-14 16:29:25,039:INFO:Copying training dataset
2024-04-14 16:29:25,039:INFO:Plot type: threshold
2024-04-14 16:29:25,084:INFO:Fitting Model
2024-04-14 16:29:25,678:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:29:25,691:INFO:Scoring test/hold-out set
2024-04-14 16:29:25,692:INFO:Saving 'Threshold.png'
2024-04-14 16:29:25,934:INFO:Visual Rendered Successfully
2024-04-14 16:29:26,045:INFO:plot_model() successfully completed......................................
2024-04-14 16:29:26,052:INFO:Initializing plot_model()
2024-04-14 16:29:26,052:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F865942610>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), plot=learning, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:29:26,052:INFO:Checking exceptions
2024-04-14 16:29:26,055:INFO:Preloading libraries
2024-04-14 16:29:26,056:INFO:Copying training dataset
2024-04-14 16:29:26,056:INFO:Plot type: learning
2024-04-14 16:29:26,104:INFO:Fitting Model
2024-04-14 16:29:27,235:INFO:Saving 'Learning Curve.png'
2024-04-14 16:29:27,376:INFO:Visual Rendered Successfully
2024-04-14 16:29:27,481:INFO:plot_model() successfully completed......................................
2024-04-14 16:29:27,490:INFO:Initializing save_model()
2024-04-14 16:29:27,490:INFO:save_model(model=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=6327,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=6327, splitter='best'), model_name=./modelo_kobe_dt, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:29:27,490:INFO:Adding model into prep_pipe
2024-04-14 16:29:27,492:INFO:./modelo_kobe_dt.pkl saved in current working directory
2024-04-14 16:29:27,497:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=6327,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.5,
                                                      random_state=6327,
                                                      splitter='best'))],
         verbose=False)
2024-04-14 16:29:27,497:INFO:save_model() successfully completed......................................
2024-04-14 16:29:27,598:INFO:Initializing load_model()
2024-04-14 16:29:27,598:INFO:load_model(model_name=./modelo_kobe_dt, platform=None, authentication=None, verbose=True)
2024-04-14 16:33:48,947:INFO:PyCaret ClassificationExperiment
2024-04-14 16:33:48,947:INFO:Logging name: Decision Tree Classifier
2024-04-14 16:33:48,947:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-04-14 16:33:48,947:INFO:version 3.3.0
2024-04-14 16:33:48,947:INFO:Initializing setup()
2024-04-14 16:33:48,947:INFO:self.USI: 157e
2024-04-14 16:33:48,947:INFO:self._variable_keys: {'X_test', 'exp_id', 'fold_generator', 'y_test', 'data', 'pipeline', 'fold_shuffle_param', 'is_multiclass', 'USI', 'html_param', 'target_param', 'fix_imbalance', '_ml_usecase', 'seed', 'memory', 'X_train', 'n_jobs_param', 'logging_param', 'log_plots_param', 'gpu_n_jobs_param', 'y_train', 'fold_groups_param', 'gpu_param', 'X', 'exp_name_log', 'idx', '_available_plots', 'y'}
2024-04-14 16:33:48,947:INFO:Checking environment
2024-04-14 16:33:48,947:INFO:python_version: 3.11.8
2024-04-14 16:33:48,947:INFO:python_build: ('main', 'Feb 26 2024 21:34:05')
2024-04-14 16:33:48,947:INFO:machine: AMD64
2024-04-14 16:33:48,947:INFO:platform: Windows-10-10.0.22635-SP0
2024-04-14 16:33:48,950:INFO:Memory: svmem(total=34301194240, available=20102623232, percent=41.4, used=14198571008, free=20102623232)
2024-04-14 16:33:48,951:INFO:Physical Core: 6
2024-04-14 16:33:48,951:INFO:Logical Core: 12
2024-04-14 16:33:48,951:INFO:Checking libraries
2024-04-14 16:33:48,951:INFO:System:
2024-04-14 16:33:48,951:INFO:    python: 3.11.8 | packaged by Anaconda, Inc. | (main, Feb 26 2024, 21:34:05) [MSC v.1916 64 bit (AMD64)]
2024-04-14 16:33:48,951:INFO:executable: c:\ProgramData\anaconda3\envs\EngenhariML\python.exe
2024-04-14 16:33:48,951:INFO:   machine: Windows-10-10.0.22635-SP0
2024-04-14 16:33:48,951:INFO:PyCaret required dependencies:
2024-04-14 16:33:48,951:INFO:                 pip: 23.3.1
2024-04-14 16:33:48,951:INFO:          setuptools: 68.2.2
2024-04-14 16:33:48,951:INFO:             pycaret: 3.3.0
2024-04-14 16:33:48,951:INFO:             IPython: 8.18.1
2024-04-14 16:33:48,951:INFO:          ipywidgets: 8.1.2
2024-04-14 16:33:48,951:INFO:                tqdm: 4.66.2
2024-04-14 16:33:48,951:INFO:               numpy: 1.26.4
2024-04-14 16:33:48,951:INFO:              pandas: 2.1.4
2024-04-14 16:33:48,951:INFO:              jinja2: 3.1.2
2024-04-14 16:33:48,951:INFO:               scipy: 1.11.4
2024-04-14 16:33:48,951:INFO:              joblib: 1.3.0
2024-04-14 16:33:48,951:INFO:             sklearn: 1.4.2
2024-04-14 16:33:48,951:INFO:                pyod: 1.1.3
2024-04-14 16:33:48,951:INFO:            imblearn: 0.12.2
2024-04-14 16:33:48,951:INFO:   category_encoders: 2.6.3
2024-04-14 16:33:48,951:INFO:            lightgbm: 4.3.0
2024-04-14 16:33:48,951:INFO:               numba: 0.59.1
2024-04-14 16:33:48,951:INFO:            requests: 2.31.0
2024-04-14 16:33:48,951:INFO:          matplotlib: 3.7.5
2024-04-14 16:33:48,951:INFO:          scikitplot: 0.3.7
2024-04-14 16:33:48,951:INFO:         yellowbrick: 1.5
2024-04-14 16:33:48,951:INFO:              plotly: 5.20.0
2024-04-14 16:33:48,952:INFO:    plotly-resampler: Not installed
2024-04-14 16:33:48,952:INFO:             kaleido: 0.2.1
2024-04-14 16:33:48,952:INFO:           schemdraw: 0.15
2024-04-14 16:33:48,952:INFO:         statsmodels: 0.14.1
2024-04-14 16:33:48,952:INFO:              sktime: 0.28.0
2024-04-14 16:33:48,952:INFO:               tbats: 1.1.3
2024-04-14 16:33:48,952:INFO:            pmdarima: 2.0.4
2024-04-14 16:33:48,952:INFO:              psutil: 5.9.6
2024-04-14 16:33:48,952:INFO:          markupsafe: 2.1.3
2024-04-14 16:33:48,952:INFO:             pickle5: Not installed
2024-04-14 16:33:48,952:INFO:         cloudpickle: 3.0.0
2024-04-14 16:33:48,952:INFO:         deprecation: 2.1.0
2024-04-14 16:33:48,952:INFO:              xxhash: 3.4.1
2024-04-14 16:33:48,952:INFO:           wurlitzer: Not installed
2024-04-14 16:33:48,952:INFO:PyCaret optional dependencies:
2024-04-14 16:33:48,952:INFO:                shap: Not installed
2024-04-14 16:33:48,952:INFO:           interpret: Not installed
2024-04-14 16:33:48,952:INFO:                umap: Not installed
2024-04-14 16:33:48,952:INFO:     ydata_profiling: Not installed
2024-04-14 16:33:48,952:INFO:  explainerdashboard: Not installed
2024-04-14 16:33:48,952:INFO:             autoviz: Not installed
2024-04-14 16:33:48,952:INFO:           fairlearn: Not installed
2024-04-14 16:33:48,952:INFO:          deepchecks: Not installed
2024-04-14 16:33:48,952:INFO:             xgboost: Not installed
2024-04-14 16:33:48,952:INFO:            catboost: Not installed
2024-04-14 16:33:48,952:INFO:              kmodes: Not installed
2024-04-14 16:33:48,952:INFO:             mlxtend: Not installed
2024-04-14 16:33:48,952:INFO:       statsforecast: Not installed
2024-04-14 16:33:48,952:INFO:        tune_sklearn: Not installed
2024-04-14 16:33:48,952:INFO:                 ray: Not installed
2024-04-14 16:33:48,952:INFO:            hyperopt: Not installed
2024-04-14 16:33:48,952:INFO:              optuna: Not installed
2024-04-14 16:33:48,952:INFO:               skopt: Not installed
2024-04-14 16:33:48,952:INFO:              mlflow: 2.11.3
2024-04-14 16:33:48,953:INFO:              gradio: Not installed
2024-04-14 16:33:48,953:INFO:             fastapi: Not installed
2024-04-14 16:33:48,953:INFO:             uvicorn: Not installed
2024-04-14 16:33:48,953:INFO:              m2cgen: Not installed
2024-04-14 16:33:48,953:INFO:           evidently: Not installed
2024-04-14 16:33:48,953:INFO:               fugue: Not installed
2024-04-14 16:33:48,953:INFO:           streamlit: Not installed
2024-04-14 16:33:48,953:INFO:             prophet: Not installed
2024-04-14 16:33:48,953:INFO:None
2024-04-14 16:33:48,953:INFO:Set up data.
2024-04-14 16:33:48,956:INFO:Set up folding strategy.
2024-04-14 16:33:48,956:INFO:Set up train/test split.
2024-04-14 16:33:48,959:INFO:Set up index.
2024-04-14 16:33:48,960:INFO:Assigning column types.
2024-04-14 16:33:48,962:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-14 16:33:48,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:33:48,997:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:33:49,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,020:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,055:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-14 16:33:49,055:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:33:49,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,077:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-14 16:33:49,113:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:33:49,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,171:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-04-14 16:33:49,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,192:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-04-14 16:33:49,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,304:INFO:Preparing preprocessing pipeline...
2024-04-14 16:33:49,304:INFO:Set up simple imputation.
2024-04-14 16:33:49,317:INFO:Finished creating preprocessing pipeline.
2024-04-14 16:33:49,319:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 16:33:49,319:INFO:Creating final display dataframe.
2024-04-14 16:33:49,359:INFO:Setup _display_container:                     Description                     Value
0                    Session id                      4188
1                        Target            shot_made_flag
2                   Target type                    Binary
3           Original data shape                 (5140, 7)
4        Transformed data shape                 (5140, 7)
5   Transformed train set shape                 (3597, 7)
6    Transformed test set shape                 (1543, 7)
7              Numeric features                         6
8                    Preprocess                      True
9               Imputation type                    simple
10           Numeric imputation                      mean
11       Categorical imputation                      mode
12               Fold Generator           StratifiedKFold
13                  Fold Number                        10
14                     CPU Jobs                        -1
15                      Use GPU                     False
16               Log Experiment              MlflowLogger
17              Experiment Name  Decision Tree Classifier
18                          USI                      157e
2024-04-14 16:33:49,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,474:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,474:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-14 16:33:49,474:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-14 16:33:49,475:INFO:Logging experiment in loggers
2024-04-14 16:33:49,513:INFO:SubProcess save_model() called ==================================
2024-04-14 16:33:49,518:INFO:Initializing save_model()
2024-04-14 16:33:49,518:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), model_name=C:\Users\luant\AppData\Local\Temp\tmpnugswu1t\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:33:49,518:INFO:Adding model into prep_pipe
2024-04-14 16:33:49,518:WARNING:Only Model saved as it was a pipeline.
2024-04-14 16:33:49,519:INFO:C:\Users\luant\AppData\Local\Temp\tmpnugswu1t\Transformation Pipeline.pkl saved in current working directory
2024-04-14 16:33:49,521:INFO:Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-04-14 16:33:49,521:INFO:save_model() successfully completed......................................
2024-04-14 16:33:49,620:INFO:SubProcess save_model() end ==================================
2024-04-14 16:33:49,631:INFO:setup() successfully completed in 0.53s...............
2024-04-14 16:33:49,637:INFO:Initializing create_model()
2024-04-14 16:33:49,637:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=0.5, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-14 16:33:49,637:INFO:Checking exceptions
2024-04-14 16:33:49,647:INFO:Importing libraries
2024-04-14 16:33:49,647:INFO:Copying training dataset
2024-04-14 16:33:49,651:INFO:Defining folds
2024-04-14 16:33:49,651:INFO:Declaring metric variables
2024-04-14 16:33:49,653:INFO:Importing untrained model
2024-04-14 16:33:49,657:INFO:Decision Tree Classifier Imported successfully
2024-04-14 16:33:49,662:INFO:Starting cross validation
2024-04-14 16:33:49,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-14 16:33:49,732:INFO:Calculating mean and std
2024-04-14 16:33:49,733:INFO:Creating metrics dataframe
2024-04-14 16:33:49,738:INFO:Finalizing model
2024-04-14 16:33:49,753:INFO:Creating Dashboard logs
2024-04-14 16:33:49,755:INFO:Model: Decision Tree Classifier
2024-04-14 16:33:49,769:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 4188, 'splitter': 'best'}
2024-04-14 16:33:49,832:INFO:Initializing predict_model()
2024-04-14 16:33:49,832:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F865E7AFC0>)
2024-04-14 16:33:49,832:INFO:Checking exceptions
2024-04-14 16:33:49,832:INFO:Preloading libraries
2024-04-14 16:33:49,971:INFO:SubProcess plot_model() called ==================================
2024-04-14 16:33:49,972:INFO:Initializing plot_model()
2024-04-14 16:33:49,972:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), plot=auc, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmpprndm9us, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:33:49,972:INFO:Checking exceptions
2024-04-14 16:33:49,973:INFO:Preloading libraries
2024-04-14 16:33:49,973:INFO:Copying training dataset
2024-04-14 16:33:49,973:INFO:Plot type: auc
2024-04-14 16:33:50,016:INFO:Fitting Model
2024-04-14 16:33:50,017:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:33:50,017:INFO:Scoring test/hold-out set
2024-04-14 16:33:50,032:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmpprndm9us\AUC.png'
2024-04-14 16:33:50,184:INFO:Visual Rendered Successfully
2024-04-14 16:33:50,282:INFO:plot_model() successfully completed......................................
2024-04-14 16:33:50,289:INFO:Initializing plot_model()
2024-04-14 16:33:50,289:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), plot=confusion_matrix, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmpprndm9us, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:33:50,289:INFO:Checking exceptions
2024-04-14 16:33:50,291:INFO:Preloading libraries
2024-04-14 16:33:50,291:INFO:Copying training dataset
2024-04-14 16:33:50,291:INFO:Plot type: confusion_matrix
2024-04-14 16:33:50,338:INFO:Fitting Model
2024-04-14 16:33:50,338:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:33:50,338:INFO:Scoring test/hold-out set
2024-04-14 16:33:50,355:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmpprndm9us\Confusion Matrix.png'
2024-04-14 16:33:50,437:INFO:Visual Rendered Successfully
2024-04-14 16:33:50,546:INFO:plot_model() successfully completed......................................
2024-04-14 16:33:50,552:INFO:Initializing plot_model()
2024-04-14 16:33:50,552:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), plot=feature, scale=1, save=C:\Users\luant\AppData\Local\Temp\tmpprndm9us, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=False, display=None, display_format=None)
2024-04-14 16:33:50,553:INFO:Checking exceptions
2024-04-14 16:33:50,554:INFO:Preloading libraries
2024-04-14 16:33:50,554:INFO:Copying training dataset
2024-04-14 16:33:50,554:INFO:Plot type: feature
2024-04-14 16:33:50,555:WARNING:No coef_ found. Trying feature_importances_
2024-04-14 16:33:50,581:INFO:Saving 'C:\Users\luant\AppData\Local\Temp\tmpprndm9us\Feature Importance.png'
2024-04-14 16:33:50,677:INFO:Visual Rendered Successfully
2024-04-14 16:33:50,781:INFO:plot_model() successfully completed......................................
2024-04-14 16:33:50,787:INFO:SubProcess plot_model() end ==================================
2024-04-14 16:33:50,936:INFO:Uploading results into container
2024-04-14 16:33:50,936:INFO:Uploading model into container now
2024-04-14 16:33:50,944:INFO:_master_model_container: 1
2024-04-14 16:33:50,944:INFO:_display_container: 2
2024-04-14 16:33:50,945:INFO:CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best')
2024-04-14 16:33:50,945:INFO:create_model() successfully completed......................................
2024-04-14 16:33:51,058:INFO:Initializing plot_model()
2024-04-14 16:33:51,058:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), plot=auc, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:33:51,058:INFO:Checking exceptions
2024-04-14 16:33:51,061:INFO:Preloading libraries
2024-04-14 16:33:51,061:INFO:Copying training dataset
2024-04-14 16:33:51,061:INFO:Plot type: auc
2024-04-14 16:33:51,103:INFO:Fitting Model
2024-04-14 16:33:51,103:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:33:51,103:INFO:Scoring test/hold-out set
2024-04-14 16:33:51,117:INFO:Saving 'AUC.png'
2024-04-14 16:33:51,283:INFO:Visual Rendered Successfully
2024-04-14 16:33:51,389:INFO:plot_model() successfully completed......................................
2024-04-14 16:33:51,396:INFO:Initializing plot_model()
2024-04-14 16:33:51,396:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), plot=pr, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:33:51,396:INFO:Checking exceptions
2024-04-14 16:33:51,400:INFO:Preloading libraries
2024-04-14 16:33:51,400:INFO:Copying training dataset
2024-04-14 16:33:51,400:INFO:Plot type: pr
2024-04-14 16:33:51,445:INFO:Fitting Model
2024-04-14 16:33:51,445:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:33:51,446:INFO:Scoring test/hold-out set
2024-04-14 16:33:51,459:INFO:Saving 'Precision Recall.png'
2024-04-14 16:33:51,589:INFO:Visual Rendered Successfully
2024-04-14 16:33:51,695:INFO:plot_model() successfully completed......................................
2024-04-14 16:33:51,702:INFO:Initializing plot_model()
2024-04-14 16:33:51,702:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), plot=confusion_matrix, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:33:51,702:INFO:Checking exceptions
2024-04-14 16:33:51,705:INFO:Preloading libraries
2024-04-14 16:33:51,706:INFO:Copying training dataset
2024-04-14 16:33:51,706:INFO:Plot type: confusion_matrix
2024-04-14 16:33:51,752:INFO:Fitting Model
2024-04-14 16:33:51,752:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:33:51,753:INFO:Scoring test/hold-out set
2024-04-14 16:33:51,768:INFO:Saving 'Confusion Matrix.png'
2024-04-14 16:33:51,853:INFO:Visual Rendered Successfully
2024-04-14 16:33:51,962:INFO:plot_model() successfully completed......................................
2024-04-14 16:33:51,969:INFO:Initializing plot_model()
2024-04-14 16:33:51,969:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), plot=threshold, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:33:51,969:INFO:Checking exceptions
2024-04-14 16:33:51,972:INFO:Preloading libraries
2024-04-14 16:33:51,972:INFO:Copying training dataset
2024-04-14 16:33:51,972:INFO:Plot type: threshold
2024-04-14 16:33:52,025:INFO:Fitting Model
2024-04-14 16:33:52,626:WARNING:C:\Users\luant\AppData\Roaming\Python\Python311\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-04-14 16:33:52,639:INFO:Scoring test/hold-out set
2024-04-14 16:33:52,640:INFO:Saving 'Threshold.png'
2024-04-14 16:33:52,823:INFO:Visual Rendered Successfully
2024-04-14 16:33:52,931:INFO:plot_model() successfully completed......................................
2024-04-14 16:33:52,938:INFO:Initializing plot_model()
2024-04-14 16:33:52,938:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F8659B2D10>, estimator=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), plot=learning, scale=1, save=True, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-04-14 16:33:52,938:INFO:Checking exceptions
2024-04-14 16:33:52,941:INFO:Preloading libraries
2024-04-14 16:33:52,942:INFO:Copying training dataset
2024-04-14 16:33:52,942:INFO:Plot type: learning
2024-04-14 16:33:52,983:INFO:Fitting Model
2024-04-14 16:33:53,187:INFO:Saving 'Learning Curve.png'
2024-04-14 16:33:53,338:INFO:Visual Rendered Successfully
2024-04-14 16:33:53,453:INFO:plot_model() successfully completed......................................
2024-04-14 16:33:53,461:INFO:Initializing save_model()
2024-04-14 16:33:53,461:INFO:save_model(model=CustomProbabilityThresholdClassifier(ccp_alpha=0.0, class_weight=None,
                                     classifier=DecisionTreeClassifier(ccp_alpha=0.0,
                                                                       class_weight=None,
                                                                       criterion='gini',
                                                                       max_depth=None,
                                                                       max_features=None,
                                                                       max_leaf_nodes=None,
                                                                       min_impurity_decrease=0.0,
                                                                       min_samples_leaf=1,
                                                                       min_samples_split=2,
                                                                       min_weight_fraction_leaf=0.0,
                                                                       monotonic_cst=None,
                                                                       random_state=4188,
                                                                       splitter='best'),
                                     criterion='gini', max_depth=None,
                                     max_features=None, max_leaf_nodes=None,
                                     min_impurity_decrease=0.0,
                                     min_samples_leaf=1, min_samples_split=2,
                                     min_weight_fraction_leaf=0.0,
                                     monotonic_cst=None,
                                     probability_threshold=0.5,
                                     random_state=4188, splitter='best'), model_name=./modelo_kobe_dt, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\luant\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-04-14 16:33:53,462:INFO:Adding model into prep_pipe
2024-04-14 16:33:53,464:INFO:./modelo_kobe_dt.pkl saved in current working directory
2024-04-14 16:33:53,469:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrap...
                                                                                        min_samples_split=2,
                                                                                        min_weight_fraction_leaf=0.0,
                                                                                        monotonic_cst=None,
                                                                                        random_state=4188,
                                                                                        splitter='best'),
                                                      criterion='gini',
                                                      max_depth=None,
                                                      max_features=None,
                                                      max_leaf_nodes=None,
                                                      min_impurity_decrease=0.0,
                                                      min_samples_leaf=1,
                                                      min_samples_split=2,
                                                      min_weight_fraction_leaf=0.0,
                                                      monotonic_cst=None,
                                                      probability_threshold=0.5,
                                                      random_state=4188,
                                                      splitter='best'))],
         verbose=False)
2024-04-14 16:33:53,469:INFO:save_model() successfully completed......................................
2024-04-14 16:33:53,577:INFO:Initializing load_model()
2024-04-14 16:33:53,577:INFO:load_model(model_name=./modelo_kobe_dt, platform=None, authentication=None, verbose=True)
